{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","state","date","todos","todoToShow","data","handlechange","event","target","value","setState","toggleComplete","todo","completedata","map","r","id","complete","localStorage","setItem","JSON","stringify","updateTodoShow","s","handleDelete","splice","indexOf","handleAllCompleteDelete","filter","handleSubmit","document","querySelector","shortid","generate","text","alert","getItem","this","parse","className","onClick","some","length","type","onChange","placeholder","required","defaultValue","getDate","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.57dcf6ba.chunk.js","sourcesContent":["import React from \"react\";\nimport shortid from \"shortid\";\nimport \"./App.css\";\nclass App extends React.Component {\n  state = {\n    date: \"    \",\n    todos: [],\n    todoToShow: \"All\",\n    data: \"\",\n  };\n  handlechange = (event) => {\n    if (event.target.value !== \"\") {\n      this.setState({ data: event.target.value });\n    }\n  };\n  toggleComplete = (todo) => {\n    let completedata = this.state.todos.map((r) => {\n      if (r.id === todo.id) {\n        return {\n          ...todo,\n          id: todo.id,\n          complete: true,\n        };\n      } else {\n        return r;\n      }\n    });\n    localStorage.setItem(\"SettingToDo\", JSON.stringify(completedata));\n    this.setState({ todos: completedata });\n  };\n  updateTodoShow = (s) => {\n    this.setState({ todoToShow: s });\n  };\n\n  handleDelete = (todo) => {\n    const data = this.state.todos;\n    data.splice(data.indexOf(todo), 1);\n    this.setState({ todos: data });\n    localStorage.setItem(\"SettingToDo\", JSON.stringify(this.state.todos));\n  };\n  handleAllCompleteDelete = () => {\n    this.setState(\n      { todos: this.state.todos.filter((todo) => !todo.complete) },\n      () =>\n        localStorage.setItem(\"SettingToDo\", JSON.stringify(this.state.todos))\n    );\n  };\n  handleSubmit = () => {\n    // console.log(document.querySelector(\"#date\").value);\n    if (this.state.data != \"\" && document.querySelector(\"#date\").value != \"\") {\n      this.setState(\n        {\n          todos: [\n            {\n              id: shortid.generate(),\n              text: this.state.data,\n              date: document.querySelector(\"#date\").value,\n              complete: false,\n            },\n            ...this.state.todos,\n          ],\n        },\n        () => {\n          localStorage.setItem(\"SettingToDo\", JSON.stringify(this.state.todos));\n        }\n      );\n      this.state.data = \"\";\n      this.state.date = \"\";\n      document.querySelector(\"#input\").value = \"\";\n      document.querySelector(\"#date\").value = \"\";\n    } else {\n      if (this.state.data == \"\") {\n        alert(\"Plz Fill the text\");\n      }\n      if (document.querySelector(\"#date\").value == \"\") {\n        alert(\"Plz Select the date\");\n      }\n    }\n  };\n  componentDidMount() {\n    if (localStorage.getItem(\"SettingToDo\") !== null) {\n      this.setState({ todos: JSON.parse(localStorage.getItem(\"SettingToDo\")) });\n    }\n  }\n  render() {\n    let todos = [];\n    if (this.state.todoToShow === \"All\") {\n      todos = this.state.todos;\n    } else if (this.state.todoToShow === \"Active\") {\n      todos = this.state.todos.filter((todo) => !todo.complete);\n    } else if (this.state.todoToShow === \"Complete\") {\n      todos = this.state.todos.filter((todo) => todo.complete);\n    }\n    return (\n      <div className=\"App\">\n        <div className=\"box\">\n          <div>\n            <br />\n            <br />\n            <br />\n            <button\n              className=\"button-color\"\n              onClick={() => this.updateTodoShow(\"All\")}\n            >\n              All\n            </button>\n            &nbsp;\n            <button\n              className=\"button-color\"\n              onClick={() => this.updateTodoShow(\"Active\")}\n            >\n              Active\n            </button>\n            &nbsp;\n            <button\n              className=\"button-color\"\n              onClick={() => this.updateTodoShow(\"Complete\")}\n            >\n              Complete\n            </button>\n            &nbsp;\n            {this.state.todos.some((todo) => todo.complete) ? (\n              <button\n                className=\"button-color\"\n                onClick={this.handleAllCompleteDelete}\n              >\n                Clear All Complete\n              </button>\n            ) : null}\n            <div>\n              {this.state.todos.filter((todo) => !todo.complete).length} Active\n              todos{\" \"}\n            </div>\n          </div>{\" \"}\n          <br />\n          <br />\n          <div className=\"row\">\n            <div className=\"col1\">\n              <input\n                id=\"input\"\n                type=\"text\"\n                onChange={this.handlechange}\n                placeholder=\"Enter a todo\"\n                required\n              />\n            </div>\n            <div className=\"col1\">\n              <input\n                id=\"date\"\n                type=\"date\"\n                defaultValue={this.state.date.getDate}\n              />\n            </div>\n            <div className=\"col1\">\n              <button\n                className=\"btn btn-1 button-add\"\n                onClick={this.handleSubmit}\n              >\n                Add To Do{\" \"}\n              </button>\n            </div>\n          </div>\n          <div>\n            {todos.map((todo) => (\n              <div>\n                <div className=\"background-color-data\" key={todo.id}>\n                  <span className=\"align-text\">\n                    {todo.text} &nbsp;&nbsp;&nbsp;&nbsp;\n                    {todo.date}\n                  </span>\n                  <span className=\"button-align\">\n                    <button\n                      className=\"button-color-text\"\n                      onClick={() => this.handleDelete(todo)}\n                    >\n                      ✘\n                    </button>\n                    {!todo.complete ? (\n                      <button\n                        className=\"button-color-text-1\"\n                        onClick={() => this.toggleComplete(todo)}\n                      >\n                        ✔\n                      </button>\n                    ) : null}\n                  </span>\n                  <br />\n                </div>\n              </div>\n            ))}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}